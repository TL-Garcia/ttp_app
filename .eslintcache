[{"/home/user/WebDev/ttp/app/src/index.js":"1","/home/user/WebDev/ttp/app/src/App.js":"2","/home/user/WebDev/ttp/app/src/components/layout/Home/Home.jsx":"3","/home/user/WebDev/ttp/app/src/components/layout/About/About.jsx":"4","/home/user/WebDev/ttp/app/src/components/layout/Contact/Contact.jsx":"5","/home/user/WebDev/ttp/app/src/components/Header/Header.jsx":"6","/home/user/WebDev/ttp/app/src/components/ChordVisualizer/ChordVisualizer.jsx":"7","/home/user/WebDev/ttp/app/src/helpers/helpers.js":"8","/home/user/WebDev/ttp/app/src/components/utilities/Button/Button.jsx":"9","/home/user/WebDev/ttp/app/src/components/ChordFilter/ChordFilter.jsx":"10","/home/user/WebDev/ttp/app/src/components/utilities/Checkbox/Checkbox.jsx":"11"},{"size":210,"mtime":1610699786049,"results":"12","hashOfConfig":"13"},{"size":350,"mtime":1610699786049,"results":"14","hashOfConfig":"13"},{"size":575,"mtime":1610703755818,"results":"15","hashOfConfig":"13"},{"size":181,"mtime":1610702645828,"results":"16","hashOfConfig":"13"},{"size":168,"mtime":1610699786049,"results":"17","hashOfConfig":"13"},{"size":858,"mtime":1610699786049,"results":"18","hashOfConfig":"13"},{"size":1646,"mtime":1610702645828,"results":"19","hashOfConfig":"13"},{"size":145,"mtime":1610702645836,"results":"20","hashOfConfig":"13"},{"size":192,"mtime":1610702645836,"results":"21","hashOfConfig":"13"},{"size":734,"mtime":1610705861043,"results":"22","hashOfConfig":"13"},{"size":369,"mtime":1610707093074,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"hwj3do",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/WebDev/ttp/app/src/index.js",[],["48","49"],"/home/user/WebDev/ttp/app/src/App.js",[],"/home/user/WebDev/ttp/app/src/components/layout/Home/Home.jsx",[],"/home/user/WebDev/ttp/app/src/components/layout/About/About.jsx",[],"/home/user/WebDev/ttp/app/src/components/layout/Contact/Contact.jsx",[],"/home/user/WebDev/ttp/app/src/components/Header/Header.jsx",[],"/home/user/WebDev/ttp/app/src/components/ChordVisualizer/ChordVisualizer.jsx",["50"],"import React, { useState } from 'react'\nimport Button from '../utilities/Button/Button'\nimport { getRandNumber } from '../../helpers/helpers'\nimport { Score } from 'react-vexflow'\nimport './ChordVisualizer.scss'\n\nconst ChordVisualizer = ({ chords }) => {\n    const [chordList, setChordList] = useState(chords)\n    const [currentChord, setCurrentChord] = useState(chordList[0])\n\n    const nextChord = () => {\n        const randIndex = getRandNumber(0, chordList.length - 1)\n        const randChord = chordList[randIndex]\n        setCurrentChord(randChord)\n    }\n\n    const discardChord = () => {\n        const randIndex = getRandNumber(0, chordList.length - 1)\n        const updatedChordList = chordList.filter(\n            (c) => c._id !== currentChord._id\n        )\n        setChordList(updatedChordList)\n        setCurrentChord(chordList[randIndex])\n    }\n\n    return (\n        <main className=\"ChordVisualizer card\">\n            <div className=\"Chord\">\n                <h2 className=\"Chord__name\">{currentChord.name}</h2>\n                <ul className=\"Chord__notes\">\n                    {currentChord.notes.map((note) => (\n                        <li key={note}>{note}</li>\n                    ))}\n                </ul>\n            </div>\n\n            {/*             <Score\n                className=\"score\"\n                staves={[currentChord.notes]}\n            /> */}\n\n            <div className=\"ChordVisualizer__controls\">\n                <Button text={'Next'} handleClick={nextChord} />\n                <Button text={'Discard'} handleClick={discardChord} />\n            </div>\n        </main>\n    )\n}\n\nexport default ChordVisualizer\n","/home/user/WebDev/ttp/app/src/helpers/helpers.js",[],"/home/user/WebDev/ttp/app/src/components/utilities/Button/Button.jsx",[],"/home/user/WebDev/ttp/app/src/components/ChordFilter/ChordFilter.jsx",[],"/home/user/WebDev/ttp/app/src/components/utilities/Checkbox/Checkbox.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":15},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Score' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]